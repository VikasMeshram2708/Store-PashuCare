generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            String   @id @default(cuid())
  name          String
  description   String?
  sku           String   @unique
  barcode       String?
  price         Float
  salePrice     Float?
  image         String?
  images        String[]
  stockQuantity Int      @default(0)
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  tags          String[]

  ownerId    String? // external user ID (from Kinde), no relation model
  orderItems OrderItem[]

  @@index([sku, name, description, price, salePrice, tags, ownerId])
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
  RETURNED
}

model Order {
  id         String      @id @default(uuid())
  status     OrderStatus @default(PENDING)
  userId     String // Kinde user ID (external)
  orderItems OrderItem[]
  total      Float
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  @@index([userId, id])
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@index([orderId, productId])
}

model Wishlist {
  id        String   @id @default(uuid())
  productId String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId, userId])
}
